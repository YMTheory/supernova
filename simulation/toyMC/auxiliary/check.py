import numpy as np
from channel_analyser import channel
import time

ievt = 23

cha0 = channel("pES", "IO", "Garching", 82703, 0.15, fitTmin=-20, fitTmax=20)
cha0.setDataFilePath(f"/afs/ihep.ac.cn/users/m/miaoyu/junofs/supernova/simulation/toyMC/scale1_poisson/Garching82703_pES_binneddata_IO_10kpc_thr0.15MeV_Tmin-20msTmax20ms_binning.root")
cha0.setNevtPerFile(100000)
cha0.setStartEvtId(0)
cha0.setEndEvtId(100)
cha0._load_pdf()
cha0._load_data_binned()
data = cha0.get_one_binned_event(ievt)
print(np.where(data == 1))
start = time.time()
nllNO = cha0.calc_binnedNLL_NO(data, 0) 
stop = time.time()
print(f"Time consumed {stop - start}")
start = time.time()
nllIO = cha0.calc_binnedNLL_IO(data, 0)
stop = time.time()
print(f"Time consumed {stop - start}")
anllNO = cha0.calc_Asimov_NLL_NO(0)
anllIO = cha0.calc_Asimov_NLL_IO(0)
print("*******************************************************************")
print(f"Neutrino number in this event = {np.sum(data)}")
print(f"Binned NLL for NO = {nllNO} and IO = {nllIO}.")
print(f"AsimovNLL for NO = {anllNO} and IO = {anllIO}.")
print("*******************************************************************")


cha1 = channel("pES", "IO", "Garching", 82703, 0.15, fitTmin=-20, fitTmax=20)
cha1.setDataFilePath("/afs/ihep.ac.cn/users/m/miaoyu/junofs/supernova/simulation/toyMC/scale1_poisson/Garching82703_pES_binneddata_IO_10kpc_thr0.15MeV_Tmin-20msTmax20ms_merger.root")
cha1.setNevtPerFile(100000)
cha1.setStartEvtId(0)
cha1.setEndEvtId(100)
cha1._load_pdf()
cha1._load_data_ak()
data = cha1.get_one_event(ievt)
print(data)
start = time.time()
nllNO = cha1.calc_NLL_NO(data, 0) 
stop = time.time()
print(f"Time consumed {stop - start}")
start = time.time()
nllIO = cha1.calc_NLL_IO(data, 0)
stop = time.time()
print(f"Time consumed {stop - start}")
anllNO = cha1.calc_Asimov_NLL_NO(0)
anllIO = cha1.calc_Asimov_NLL_IO(0)
print("*******************************************************************")
print(f"Neutrino number in this event = {len(data)}")
print(f"Unbinned NLL for NO = {nllNO} and IO = {nllIO}.")
print(f"AsimovNLL for NO = {anllNO} and IO = {anllIO}.")
#print(r"$\Delta \chi^2 of this event = " + f"{2*(nllNO-2nllIO):.2f}")
print("*******************************************************************")


